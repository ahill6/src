# -*- sh -*- 

echo "all v1.0 (c) 2016 Tim Menzies, MIT (v2) license"
echo

mine=/tmp/$USER/$$
tmp=/tmp/$USER/$$/tmp
mkdir -p ${mine} {tmp}

Seed=0

trap zap 0 1 2 3 4 15 # catches normal end, Control-C, Control-D etc
zap() { echo "Zapping..." ; rm -rf "$Tmp"; }

Ed="/Applications/Emacs.app/Contents/MacOS/Emacs"
Edot="/tmp/edot$$"

e() { "$Ed" -q -l "$Edot" $* &  # $Edot defined below 
}

cat << 'EOF' > "$Edot"
(add-to-list 'load-path "~/gits/s-more/src/etc/")
(setq ispell-program-name "/usr/local/bin/ispell")

(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "https://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))

(when (>= emacs-major-version 24)
  (require 'package)
  (add-to-list
   'package-archives
   '("melpa" . "http://melpa.org/packages/")
   t)
  (package-initialize))

(require 'lua-block)
(lua-block-mode t)
(setq lua-indent-level 2)

(progn
  (setq require-final-newline    t) 
  (setq next-line-add-newlines nil) 
  (setq inhibit-startup-message  t)
  (setq-default fill-column     80)
  (setq column-number-mode       t)
  (setq make-backup-files      nil) 
  (transient-mark-mode           t)
  (global-font-lock-mode         t)
  (global-hl-line-mode           0)  
  (xterm-mouse-mode              t)
  (setq scroll-step              1)
  (show-paren-mode               t))

(setq display-time-day-and-date t) (display-time) 
(setq-default indent-tabs-mode nil) 

(setq frame-title-format
  '(:eval
    (if buffer-file-name
        (replace-regexp-in-string
         "\\\\" "/"
         (replace-regexp-in-string
          (regexp-quote (getenv "HOME")) "~"
          (convert-standard-filename buffer-file-name)))
      (buffer-name))))

(add-hook 'lua-mode-hook
   (lambda ()
      (local-set-key (kbd "C-c <right>") 'hs-show-block)
      (local-set-key (kbd "C-c <left>")  'hs-hide-block)
      (local-set-key (kbd "C-c <up>")    'hs-hide-all)
      (local-set-key (kbd "C-c <down>")  'hs-show-all)
      (hs-minor-mode t)))
EOF

reload() { . "$Here"/etc/dotbashrc ; }
	
here() { cd $1; basename "$PWD"; }

PROMPT_COMMAND='echo  -ne "ALL:\033]0; $(here ..)/$(here .)\007"
PS1=" $(here ..)/$(here .) \!> "'

fyi() { echo "$@" 1>&2; } 

alias ls='ls -G'                 ## short format
alias ll='ls -la'                ## long format
alias l.='ls -d .* --color=auto' ## Show hidden files
alias cd..='cd ..' ## get rid of a common 'command not found' error
alias ..='cd ..' # quick change dir command
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .3='cd ../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

gitpush() {
    ready
    git status
    git commit -am "saving"
    git push origin master
}
gitpull() {
    ready
    git pull origin master
}
ready() {
    ok
    gitting
}
gitting() {
    git config --global user.name "Tim Menzies"
    git config --global user.email tim@menzies.us
    git config --global core.editor "`which nano`"
    git config --global credential.helper cache
    git config credential.helper 'cache --timeout=3600'
}


